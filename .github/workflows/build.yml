name: Build and Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  packages: write

env:
  CARGO_TERM_COLOR: always

jobs:
  java-build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: amd64
            label: linux-amd64
            static: true
          - os: ubuntu-latest
            arch: arm64
            label: linux-arm64
            static: true
          - os: windows-latest
            arch: amd64
            label: windows-amd64
            static: true
          - os: macos-latest
            arch: amd64
            label: macos-amd64
            static: false
          - os: macos-14
            arch: arm64
            label: macos-arm64
            static: false

    steps:
    - uses: actions/checkout@v4

    - name: Setup GraalVM
      uses: graalvm/setup-graalvm@v1
      with:
        java-version: '17'
        distribution: 'graalvm'
        github-token: ${{ secrets.GITHUB_TOKEN }}
        native-image-job-reports: 'true'
        architecture: ${{ matrix.arch }}

    - name: Build with Maven
      working-directory: java
      run: |
        mvn -B clean package org.apache.maven.plugins:maven-assembly-plugin:3.6.0:single --file pom.xml

    - name: Upload JAR Artifacts
      if: matrix.os == 'ubuntu-latest' && matrix.arch == 'amd64'
      uses: actions/upload-artifact@v4
      with:
        name: jar-files
        path: |
          java/target/*[^s].jar
          java/target/*-with-dependencies.jar
          java/target/*-sources.jar
          java/target/*-javadoc.jar
        retention-days: 5

    - name: Build Native Image (Windows)
      if: matrix.os == 'windows-latest'
      shell: cmd
      working-directory: java
      run: |
        mkdir target\native-image
        copy target\ChatOn-1.0-SNAPSHOT-jar-with-dependencies.jar target\native-image\ChatOn.jar
        cd target\native-image
        native-image.cmd ^
        -H:ConfigurationFileDirectories=.\config-dir ^
        -H:+AddAllCharsets ^
        -jar ChatOn.jar ^
        -H:Name=Java-ChatOn-${{ matrix.label }} ^
        --enable-https ^
        --enable-http ^
        --static 

    - name: Build Native Image (Linux/MacOS)
      if: matrix.os != 'windows-latest'
      shell: bash
      working-directory: java
      run: |
        mkdir -p target/native-image
        cp target/*-with-dependencies.jar target/native-image/ChatOn.jar
        cd target/native-image
        native-image \
        -H:ConfigurationFileDirectories=./config-dir \
        -H:+AddAllCharsets \
        -jar ChatOn.jar \
        -H:Name=Java-ChatOn-${{ matrix.label }} \
        --enable-https \
        --enable-http \
        ${{ matrix.static == true && '--static' || '' }} \
        --no-fallback

    - name: Upload Native Build
      uses: actions/upload-artifact@v4
      with:
        name: java-${{ matrix.label }}
        path: java/target/native-image/Java-ChatOn-${{ matrix.label }}${{ matrix.os == 'windows-latest' && '.exe' || '' }}
        retention-days: 5
